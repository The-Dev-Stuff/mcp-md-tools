
{
  "openapi": "3.0.1",
  "info": {
    "title": "FakeRESTApi.Web V1",
    "version": "v1"
  },
  "paths": {
    "/api/v1/Activities": {
      "get": {
        "description": "Returns a list of activities.",
        "tags": [
          "Activities"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  }
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  }
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new activity.",
        "tags": [
          "Activities"
        ],
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Activities/{id}": {
      "get": {
        "description": "Returns an activity by ID.",
        "tags": [
          "Activities"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Updates an activity by ID.",
        "tags": [
          "Activities"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes an activity by ID.",
        "tags": [
          "Activities"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Authors": {
      "get": {
        "description": "Returns a list of authors.",
        "tags": [
          "Authors"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Author"
                  }
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Author"
                  }
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Author"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new author.",
        "tags": [
          "Authors"
        ],
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Authors/authors/books/{idBook}": {
      "get": {
        "description": "Returns authors by book ID.",
        "tags": [
          "Authors"
        ],
        "parameters": [
          {
            "name": "idBook",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Author"
                  }
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Author"
                  }
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Author"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Authors/{id}": {
      "get": {
        "description": "Returns an author by ID.",
        "tags": [
          "Authors"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Updates an author by ID.",
        "tags": [
          "Authors"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes an author by ID.",
        "tags": [
          "Authors"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Books": {
      "get": {
        "description": "Returns a list of books.",
        "tags": [
          "Books"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new book.",
        "tags": [
          "Books"
        ],
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Books/{id}": {
      "get": {
        "description": "Returns a book by ID.",
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Updates a book by ID.",
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "description": "Deletes a book by ID.",
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/CoverPhotos": {
      "get": {
        "description": "Returns a list of cover photos.",
        "tags": [
          "CoverPhotos"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CoverPhoto"
                  }
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CoverPhoto"
                  }
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CoverPhoto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new cover photo.",
        "tags": [
          "CoverPhotos"
        ],
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CoverPhoto"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CoverPhoto"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CoverPhoto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CoverPhotos/books/covers/{idBook}": {
      "get": {
        "description": "Returns cover photos by book ID.",
        "tags": [
          "CoverPhotos"
        ],
        "parameters": [
          {
            "name": "idBook",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CoverPhoto"
                  }
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CoverPhoto"
                  }
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CoverPhoto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/CoverPhotos/{id}": {
      "get": {
        "description": "Returns a cover photo by ID.",
        "tags": [
          "CoverPhotos"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Updates a cover photo by ID.",
        "tags": [
          "CoverPhotos"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CoverPhoto"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CoverPhoto"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CoverPhoto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CoverPhoto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a cover photo by ID.",
        "tags": [
          "CoverPhotos"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Users": {
      "get": {
        "description": "Returns a list of users.",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/json; v=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new user.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Users/{id}": {
      "get": {
        "description": "Returns a user by ID.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "description": "Updates a user by ID.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json; v=1.0": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "description": "Deletes a user by ID.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Activity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "completed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Author": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idBook": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Book": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "excerpt": {
            "type": "string",
            "nullable": true
          },
          "publishDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CoverPhoto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idBook": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}
